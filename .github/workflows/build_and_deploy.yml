name: Build and Deploy

on:
  push:
    branches: [develop, 'release-*', main]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set lowercase image name
        id: image
        run: |
          echo "name=$(echo 'ghcr.io/${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ${{ steps.image.outputs.name }}:test  # ✅ Usa lowercase
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        env:
          TEST_IMAGE: ${{ steps.image.outputs.name }}:test  # ✅ Usa lowercase
        run: |
          docker compose -f docker-compose.test.yml up --abort-on-container-exit
          docker compose -f docker-compose.test.yml down

      - name: Determine environment
        id: env
        run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/release-* ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=development" >> $GITHUB_OUTPUT
          fi

      - name: Build and push final image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.image.outputs.name }}:${{ steps.env.outputs.environment }}
            ${{ steps.image.outputs.name }}:${{ github.sha }}
            ${{ steps.image.outputs.name }}:latest
          cache-from: type=gha

      - name: Deploy to ${{ steps.env.outputs.environment }}
        run: |
          echo "Deploying image: ${{ steps.image.outputs.name }}:${{ steps.env.outputs.environment }}"
          echo "Environment: ${{ steps.env.outputs.environment }}"
          echo "SHA: ${{ github.sha }}"
